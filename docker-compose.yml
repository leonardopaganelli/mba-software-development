version: '3'
services:

  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:5.5.10
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kowl:
    container_name: kowl
    image: quay.io/cloudhut/kowl:v1.5.0
    restart: on-failure
    hostname: kowl
    ports:
    - "8085:8080"
    environment:
      KAFKA_BROKERS: kafka:19092
    depends_on:
      - kafka

  jusbrasil-db:
    container_name: jusbrasil-db
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: jusbrasil-db

  jusbrasil-service:
    container_name: jusbrasil-service
    restart: unless-stopped
    build:
      context: jusbrasil-service
    ports:
      - "3001:3001"
    depends_on:
      - zookeeper
      - kafka
      - jusbrasil-db

  lawsuit-service:
    container_name: lawsuit-service
    restart: unless-stopped
    build:
      context: lawsuit-service
    ports:
      - "3000:3000"
    depends_on:
      - zookeeper
      - kafka

  lawsuit-client:
    container_name: lawsuit-client
    build:
          context: lawsuit-client
    ports:
      - "8080:8080"
    stdin_open: true